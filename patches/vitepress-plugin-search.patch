diff --git a/dist/Search.vue b/dist/Search.vue
index f8062c1320781e38d33d9f760539ac941e8854d1..ace97319f737c2bf1da2aa59cacf573c62e7ce6a 100644
--- a/dist/Search.vue
+++ b/dist/Search.vue
@@ -4,6 +4,11 @@ import { useData, withBase, useRouter } from "vitepress";
 
 // @ts-ignore
 import Index from "./module/index.js";
+import {JSX} from 'vue/jsx-runtime';
+
+const slots = defineSlots<{
+  default(): JSX.Element;
+}>()
 
 //TODO: delete deprecate code
 const VPData = useData();
@@ -11,7 +16,6 @@ const VPData = useData();
 // @ts-ignore
 const locale = VPData.localeIndex || VPData.localePath;
 
-const metaKey = ref();
 const open = ref<Boolean>(false);
 const searchTerm = ref<string | null>();
 const origin = ref<string>("");
@@ -24,7 +28,7 @@ const buttonLabel = ref("Search");
 const placeholder = ref("Search docs");
 const focused = ref(0)
 const modal = ref<HTMLElement>()
-  const router = useRouter()
+const router = useRouter()
 interface Options {
   previewLength: number;
   buttonLabel: string;
@@ -45,7 +49,7 @@ const result = computed(() => {
       var preview = item["p"];
       var link = item["l"];
       var anchor = item["a"];
-      link = link.split(" ").join("-");
+      // link = link.split(" ").join("-");
       search.push({id: i, link, title, preview, anchor });
     }
     return search as any[];
@@ -77,6 +81,7 @@ const openSearch = () => {
 };
 
 onMounted(async () => {
+  // @ts-ignore
   const data = await import("virtual:search-data");
   INDEX_DATA.value = data.default.INDEX_DATA;
   PREVIEW_LOOKUP.value = data.default.PREVIEW_LOOKUP;
@@ -94,10 +99,6 @@ onMounted(async () => {
 
   searchIndex.value = document
 
-  metaKey.value.innerHTML = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)
-    ? "⌘"
-    : "Ctrl";
-
   const handleSearchHotKey = (e: KeyboardEvent) => {
     if (e.key === "k" && (e.ctrlKey || e.metaKey)) {
       e.preventDefault();
@@ -110,7 +111,7 @@ onMounted(async () => {
   };
 
   window.addEventListener("keydown", handleSearchHotKey);
-  
+
 
 });
 
@@ -118,39 +119,39 @@ const groupedResults = computed(() => GroupBy(result.value, (x:any) =>
                   x.link.split('/').slice(0, -1).join('-')
                 ))
 
-const linksOrder = computed(() => Object.values(groupedResults.value).flat().map(i => i.id))
+const linksOrder = computed(() => Object.values(groupedResults.value).flat().map((i: any) => i.id))
 
 function cleanSearch() {
   open.value = false;
   searchTerm.value = "";
 }
 
-const handleNavigation = (e: KeyboardEvent) => {  
+const handleNavigation = (e: KeyboardEvent) => {
   if(!document.getElementsByClassName("search-group")[0])
     return
 
   if(e.key == 'ArrowUp' || e.key == 'ArrowDown'){
     const currentIndex = linksOrder.value.indexOf(focused.value)
     if(e.key == 'ArrowUp'){
-      const previousIndex = currentIndex == 0 ? linksOrder.value.length - 1: currentIndex - 1 
+      const previousIndex = currentIndex == 0 ? linksOrder.value.length - 1: currentIndex - 1
       focused.value =  linksOrder.value[previousIndex]
     }
     if(e.key == 'ArrowDown'){
       const nextIndex = currentIndex > linksOrder.value.length - 2 ? 0 : currentIndex + 1
       focused.value = linksOrder.value[nextIndex]
     }
-    
+
     if(currentIndex < 5 ){
         const el = modal.value!.getElementsByClassName("VPPluginSearch-search-group")[0]
         el?.scrollIntoView(true)
     }else
        document.getElementById(linksOrder.value[focused.value])?.scrollIntoView(true)
-      
+
       nextTick()
   }
   if(e.key == "Enter"){
     router.go(VPData.site.value.base + modal.value!.getElementsByClassName('link-focused')[0].getAttribute("href")?.replace(origin.value, ""))
-  }  
+  }
 }
 </script>
 
@@ -161,9 +162,9 @@ const handleNavigation = (e: KeyboardEvent) => {
       <Teleport to="body">
         <div v-show="open" class="VPPluginSearch-modal-back" @click="open = false" @keydown="handleNavigation">
           <div class="VPPluginSearch-modal" @click.stop ref="modal" >
-            <form class="DocSearch-Form">
+            <form class="DocSearch-Form-new">
               <label
-                class="DocSearch-MagnifierLabel"
+                class="DocSearch-MagnifierLabel-new"
                 for="docsearch-input"
                 id="docsearch-label"
                 ><svg
@@ -204,30 +205,30 @@ const handleNavigation = (e: KeyboardEvent) => {
             <div class="VPPluginSearch-search-list">
               <div class="search-group"
                 v-for="(group, groupKey) of groupedResults"
-                :key="groupKey"                
+                :key="groupKey"
               >
                 <span class="VPPluginSearch-search-group">{{
                   groupKey
                     ? groupKey.toString()[0].toUpperCase() +
-                      groupKey.toString().slice(1) 
+                      groupKey.toString().slice(1)
                     : "Home"
                 }}</span>
                 <a
                   :href="origin + item.link"
                   v-for="(item, index) in group"
                   :key="item.id"
-                  @click="cleanSearch"                  
+                  @click="cleanSearch"
                   @mouseenter="focused = item.id"
                   :class="{'link-focused':focused == item.id}"
                   :id="index.toString()"
                 >
                   <div class="VPPluginSearch-search-item">
                     <span class="VPPluginSearch-search-item-icon">{{
-                      item.link.includes("#") ? "#" : "▤"
+                      item.link.includes("#") ? "#" : "§"
                     }}</span>
                     <div style="width: 100%">
                       <h3>{{ item.title }}</h3>
-                      <p> <div v-html="item.preview"></div> </p>
+                      <div> <div v-html="item.preview"></div> </div>
                     </div>
                     <span class="VPPluginSearch-search-item-icon">↪</span>
                   </div>
@@ -239,57 +240,33 @@ const handleNavigation = (e: KeyboardEvent) => {
         </div>
       </Teleport>
     </ClientOnly>
-    <div id="docsearch" @click="openSearch()">
-      <button
-        type="button"
-        class="DocSearch DocSearch-Button"
-        aria-label="Search"
-      >
-        <span class="DocSearch-Button-Container">
-          <svg
-            width="20"
-            height="20"
-            class="DocSearch-Search-Icon"
-            viewBox="0 0 20 20"
-          >
-            <path
-              d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z"
-              stroke="currentColor"
-              fill="none"
-              fill-rule="evenodd"
-              stroke-linecap="round"
-              stroke-linejoin="round"
-            ></path>
-          </svg>
-          <span class="DocSearch-Button-Placeholder">{{buttonLabel}}</span>
-        </span>
-        <span class="DocSearch-Button-Keys">
-          <span class="DocSearch-Button-Key" ref="metaKey">Meta</span>
-          <span class="DocSearch-Button-Key">K</span>
-        </span>
-      </button>
+    <div
+      id="docsearch"
+      @click="openSearch()"
+    >
+      <slot name="default" />
     </div>
   </div>
 </template>
 
 <style>
-.VPPluginSearch-flex-logo{
-  width: 80px;
-  margin-left: calc(100% - 90px);
-  padding-bottom: 10px;
+.VPPluginSearch-flex-logo {
+  width: 60px;
+  margin: .5rem 0 0 calc(100% - 60px - 1rem);
+  padding-bottom: .5rem;
 }
 
 .VPPluginSearch-search-list {
-  padding: 1rem;
+  padding: 0 1rem;
   max-height: calc(100vh - 230px);
   overflow-x: auto;
 }
 
 .VPPluginSearch-search-item-icon {
-  font-family: none;
+  width: 2rem;
+  display: flex;
   align-self: center;
-  padding: 0 1rem 0 0;
-  font-size: x-large;
+  font-size: 1.5rem;
 }
 
 .VPPluginSearch-search-list > div {
@@ -298,15 +275,16 @@ const handleNavigation = (e: KeyboardEvent) => {
 }
 
 .VPPluginSearch-search-item {
-  padding: 0.25rem 1rem;
-  margin: 8px 0 0 0;
+  padding: .5rem 1rem;
+  margin: 1rem 0 0 0;
   border: solid 1px;
   border-radius: 6px;
   display: flex;
+  gap: .5rem;
 
-  border-color: var(--vp-custom-block-details-border);
-  color: var(--vp-custom-block-details-text);
-  background-color: var(--vp-custom-block-details-bg);
+  border-color: var(--color--level-3);
+  color: var(--color--level-5);
+  /* background-color: var(--color--level-1); */
 }
 
 .VPPluginSearch-search-item p {
@@ -318,12 +296,12 @@ const handleNavigation = (e: KeyboardEvent) => {
 a.link-focused .VPPluginSearch-search-item,
 .VPPluginSearch-search-item:hover {
   color: #fff;
-  background: var(--vp-local-search-highlight-bg);
+  background: var(--color--level-5);
 }
 
 a.link-focused .VPPluginSearch-search-item,
 .VPPluginSearch-search-item:hover > p {
-  color: #fff;
+  color: var(--color--level-1);
 }
 
 /* .dark .search-item > p {
@@ -336,10 +314,9 @@ a.link-focused .VPPluginSearch-search-item,
   padding-left: 16px;
 }
 
-.DocSearch-MagnifierLabel {
-  margin: 16px;
-  color: var(--c-brand-light);
-  stroke-width: 2px;
+.DocSearch-MagnifierLabel-new {
+  color: var(--color--level-5);
+  stroke-width: 5px;
 }
 
 .DocSearch-Input {
@@ -389,17 +366,6 @@ a.link-focused .VPPluginSearch-search-item,
   /* box-shadow: inset 1px 1px 0 0 hsla(0, 0%, 100%, 0.5), 0 3px 8px 0 #555a64; */
 }
 
-.DocSearch-Button-Keys {
-  display: flex;
-  min-width: calc(40px + 0.8em);
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button .DocSearch-Button-Key {
-    display: inline-block;
-  }
-}
-
 @media (max-width: 768px) {
   .VPPluginSearch-modal {
     max-width: 100%;
@@ -407,74 +373,28 @@ a.link-focused .VPPluginSearch-search-item,
   }
 }
 
-.dark .DocSearch-Form {
+.dark .DocSearch-Form-new {
   background-color: var(--vt-c-bg-mute);
 }
-.DocSearch-Form {
-  background-color: #fff;
-  border: 1px solid var(--vt-c-brand);
-  padding: 6px;
-}
-.DocSearch-Form {
-  align-items: center;
+.DocSearch-Form-new {
+  border-bottom: 1px solid var(--color--level-5);
   background: var(--docsearch-searchbox-focus-background);
-  border-radius: 4px;
-  box-shadow: var(--docsearch-searchbox-shadow);
-  display: flex;
+
+  width: 100%;
   height: var(--docsearch-searchbox-height);
   margin: 0;
-  padding: 0 var(--docsearch-spacing);
+  padding: 1rem;
+
+  display: flex;
+  align-items: center;
+
   position: relative;
-  width: 100%;
 }
 .DocSearch-Container,
 .DocSearch-Container * {
   box-sizing: border-box;
 }
 
-.DocSearch-Button .DocSearch-Button-Key {
-  margin-top: 2px;
-  border: 1px solid var(--vt-c-divider);
-  border-right: none;
-  border-radius: 4px 0 0 4px;
-  display: none;
-  padding-left: 6px;
-  height: 22px;
-  line-height: 22px;
-  transition: color 0.5s, border-color 0.5s;
-  min-width: 0;
-}
-.DocSearch-Button-Key {
-  font-size: 12px;
-  font-weight: 500;
-  height: 20px;
-  margin: 0;
-  width: auto;
-  color: var(--vt-c-text-3);
-  transition: color 0.5s;
-  display: inline-block;
-  padding: 0 1px;
-}
-.DocSearch-Button-Key {
-  align-items: center;
-  background: var(--c-brand-light);
-  border-radius: 3px;
-  box-shadow: var(--c-brand);
-  color: var(--docsearch-muted-color);
-  display: flex;
-  height: 18px;
-  justify-content: center;
-  margin-right: 0.4em;
-  padding-bottom: 2px;
-  position: relative;
-  top: -1px;
-  width: 20px;
-}
-
-body.dark .DocSearch-Button:hover {
-  box-shadow: none;
-}
-
 .DocSearch {
   --docsearch-primary-color: var(--vt-c-brand);
   --docsearch-highlight-color: var(--docsearch-primary-color);
@@ -501,134 +421,11 @@ body.dark .DocSearch-Button:hover {
   border-top: 1px solid var(--vt-c-divider);
 }
 
-.DocSearch-Form {
-  background-color: white;
-  border: 1px solid var(--vt-c-brand);
-}
-
-.DocSearch-Button-Container {
-  align-items: center;
-  display: flex;
-}
-
-.DocSearch-Button {
-  display: flex;
-  justify-content: center;
-  align-items: center;
-  margin: 0;
-  width: 48px;
-  height: 55px;
-  background: transparent;
-  border: none;
-}
-
-.DocSearch-Button:hover {
-  background: transparent;
-}
-.DocSearch-Button:focus {
-  outline: 1px dotted;
-  outline: 5px auto -webkit-focus-ring-color;
-}
-.DocSearch-Button:focus:not(:focus-visible) {
-  outline: none !important;
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button {
-    justify-content: flex-start;
-    width: 100%;
-  }
-}
-
-.DocSearch-MagnifierLabel {
-  color: var(--vp-c-brand-dark);
-}
-
-.DocSearch-Button .DocSearch-Search-Icon {
-  transition: color 0.5s;
-  fill: currentColor;
-  width: 18px;
-  height: 18px;
-  position: relative;
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button .DocSearch-Search-Icon {
-    top: 1px;
-    margin-right: 10px;
-    width: 15px;
-    height: 15px;
-  }
-}
-
-.DocSearch-Button:hover .DocSearch-Search-Icon {
-  color: var(--vt-c-text-1);
-}
-
-.DocSearch-Button-Placeholder {
-  transition: color 0.5s;
-  font-size: 13px;
-  font-weight: 500;
-  color: #66666699;
-  display: none;
-  padding: 0 10px 0 0;
-}
-
-@media (min-width: 960px) {
-  .DocSearch-Button-Placeholder {
-    display: inline-block;
-  }
-}
-
-.DocSearch-Button:hover .DocSearch-Button-Placeholder {
-  color: var(--vt-c-text-1);
-}
-
-.DocSearch-Button .DocSearch-Button-Key {
-  margin-top: 2px;
-  border: 1px solid var(--vt-c-divider);
-  border-right: none;
-  border-radius: 4px 0 0 4px;
-  display: none;
-  padding-left: 6px;
-  height: 22px;
-  line-height: 22px;
-  transition: color 0.5s, border-color 0.5s;
-  min-width: 0;
-}
-
-.DocSearch-Button .DocSearch-Button-Key + .DocSearch-Button-Key {
-  border-right: 1px solid var(--vt-c-divider);
-  border-left: none;
-  border-radius: 0 4px 4px 0;
-  padding-left: 2px;
-  padding-right: 6px;
-}
-
-.DocSearch-Button:hover .DocSearch-Button-Key {
-  /* border-color: var(--vt-c-brand-light); */
-  color: var(--vt-c-brand-light);
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button .DocSearch-Button-Key {
-    display: inline-block;
-  }
-}
-
-.DocSearch-Button-Key {
-  font-size: 12px;
-  font-weight: 500;
-  height: 20px;
-  margin: 0;
-  width: auto;
-  color: var(--vt-c-text-3);
-  transition: color 0.5s;
-  display: inline-block;
-  padding: 0 1px;
+.search-group {
+  margin-top: 1rem;
 }
 
 .VPPluginSearch-search-group{
-  color: var(--vp-c-brand-1)
+  color: var(--color--level-5)
 }
 </style>
