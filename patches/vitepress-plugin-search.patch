diff --git a/dist/Search.vue b/dist/Search.vue
index f8062c1320781e38d33d9f760539ac941e8854d1..5ac9ab8a933d3faa419b31716caec6666a58e863 100644
--- a/dist/Search.vue
+++ b/dist/Search.vue
@@ -4,6 +4,11 @@ import { useData, withBase, useRouter } from "vitepress";
 
 // @ts-ignore
 import Index from "./module/index.js";
+import {JSX} from 'vue/jsx-runtime';
+
+const slots = defineSlots<{
+  default(): JSX.Element;
+}>()
 
 //TODO: delete deprecate code
 const VPData = useData();
@@ -11,7 +16,6 @@ const VPData = useData();
 // @ts-ignore
 const locale = VPData.localeIndex || VPData.localePath;
 
-const metaKey = ref();
 const open = ref<Boolean>(false);
 const searchTerm = ref<string | null>();
 const origin = ref<string>("");
@@ -45,7 +49,7 @@ const result = computed(() => {
       var preview = item["p"];
       var link = item["l"];
       var anchor = item["a"];
-      link = link.split(" ").join("-");
+      // link = link.split(" ").join("-");
       search.push({id: i, link, title, preview, anchor });
     }
     return search as any[];
@@ -94,10 +98,6 @@ onMounted(async () => {
 
   searchIndex.value = document
 
-  metaKey.value.innerHTML = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)
-    ? "âŒ˜"
-    : "Ctrl";
-
   const handleSearchHotKey = (e: KeyboardEvent) => {
     if (e.key === "k" && (e.ctrlKey || e.metaKey)) {
       e.preventDefault();
@@ -110,7 +110,7 @@ onMounted(async () => {
   };
 
   window.addEventListener("keydown", handleSearchHotKey);
-  
+
 
 });
 
@@ -125,32 +125,32 @@ function cleanSearch() {
   searchTerm.value = "";
 }
 
-const handleNavigation = (e: KeyboardEvent) => {  
+const handleNavigation = (e: KeyboardEvent) => {
   if(!document.getElementsByClassName("search-group")[0])
     return
 
   if(e.key == 'ArrowUp' || e.key == 'ArrowDown'){
     const currentIndex = linksOrder.value.indexOf(focused.value)
     if(e.key == 'ArrowUp'){
-      const previousIndex = currentIndex == 0 ? linksOrder.value.length - 1: currentIndex - 1 
+      const previousIndex = currentIndex == 0 ? linksOrder.value.length - 1: currentIndex - 1
       focused.value =  linksOrder.value[previousIndex]
     }
     if(e.key == 'ArrowDown'){
       const nextIndex = currentIndex > linksOrder.value.length - 2 ? 0 : currentIndex + 1
       focused.value = linksOrder.value[nextIndex]
     }
-    
+
     if(currentIndex < 5 ){
         const el = modal.value!.getElementsByClassName("VPPluginSearch-search-group")[0]
         el?.scrollIntoView(true)
     }else
        document.getElementById(linksOrder.value[focused.value])?.scrollIntoView(true)
-      
+
       nextTick()
   }
   if(e.key == "Enter"){
     router.go(VPData.site.value.base + modal.value!.getElementsByClassName('link-focused')[0].getAttribute("href")?.replace(origin.value, ""))
-  }  
+  }
 }
 </script>
 
@@ -204,19 +204,19 @@ const handleNavigation = (e: KeyboardEvent) => {
             <div class="VPPluginSearch-search-list">
               <div class="search-group"
                 v-for="(group, groupKey) of groupedResults"
-                :key="groupKey"                
+                :key="groupKey"
               >
                 <span class="VPPluginSearch-search-group">{{
                   groupKey
                     ? groupKey.toString()[0].toUpperCase() +
-                      groupKey.toString().slice(1) 
+                      groupKey.toString().slice(1)
                     : "Home"
                 }}</span>
                 <a
                   :href="origin + item.link"
                   v-for="(item, index) in group"
                   :key="item.id"
-                  @click="cleanSearch"                  
+                  @click="cleanSearch"
                   @mouseenter="focused = item.id"
                   :class="{'link-focused':focused == item.id}"
                   :id="index.toString()"
@@ -239,35 +239,11 @@ const handleNavigation = (e: KeyboardEvent) => {
         </div>
       </Teleport>
     </ClientOnly>
-    <div id="docsearch" @click="openSearch()">
-      <button
-        type="button"
-        class="DocSearch DocSearch-Button"
-        aria-label="Search"
-      >
-        <span class="DocSearch-Button-Container">
-          <svg
-            width="20"
-            height="20"
-            class="DocSearch-Search-Icon"
-            viewBox="0 0 20 20"
-          >
-            <path
-              d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z"
-              stroke="currentColor"
-              fill="none"
-              fill-rule="evenodd"
-              stroke-linecap="round"
-              stroke-linejoin="round"
-            ></path>
-          </svg>
-          <span class="DocSearch-Button-Placeholder">{{buttonLabel}}</span>
-        </span>
-        <span class="DocSearch-Button-Keys">
-          <span class="DocSearch-Button-Key" ref="metaKey">Meta</span>
-          <span class="DocSearch-Button-Key">K</span>
-        </span>
-      </button>
+    <div
+      id="docsearch"
+      @click="openSearch()"
+    >
+      <slot name="default" />
     </div>
   </div>
 </template>
@@ -389,17 +365,6 @@ a.link-focused .VPPluginSearch-search-item,
   /* box-shadow: inset 1px 1px 0 0 hsla(0, 0%, 100%, 0.5), 0 3px 8px 0 #555a64; */
 }
 
-.DocSearch-Button-Keys {
-  display: flex;
-  min-width: calc(40px + 0.8em);
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button .DocSearch-Button-Key {
-    display: inline-block;
-  }
-}
-
 @media (max-width: 768px) {
   .VPPluginSearch-modal {
     max-width: 100%;
@@ -432,49 +397,6 @@ a.link-focused .VPPluginSearch-search-item,
   box-sizing: border-box;
 }
 
-.DocSearch-Button .DocSearch-Button-Key {
-  margin-top: 2px;
-  border: 1px solid var(--vt-c-divider);
-  border-right: none;
-  border-radius: 4px 0 0 4px;
-  display: none;
-  padding-left: 6px;
-  height: 22px;
-  line-height: 22px;
-  transition: color 0.5s, border-color 0.5s;
-  min-width: 0;
-}
-.DocSearch-Button-Key {
-  font-size: 12px;
-  font-weight: 500;
-  height: 20px;
-  margin: 0;
-  width: auto;
-  color: var(--vt-c-text-3);
-  transition: color 0.5s;
-  display: inline-block;
-  padding: 0 1px;
-}
-.DocSearch-Button-Key {
-  align-items: center;
-  background: var(--c-brand-light);
-  border-radius: 3px;
-  box-shadow: var(--c-brand);
-  color: var(--docsearch-muted-color);
-  display: flex;
-  height: 18px;
-  justify-content: center;
-  margin-right: 0.4em;
-  padding-bottom: 2px;
-  position: relative;
-  top: -1px;
-  width: 20px;
-}
-
-body.dark .DocSearch-Button:hover {
-  box-shadow: none;
-}
-
 .DocSearch {
   --docsearch-primary-color: var(--vt-c-brand);
   --docsearch-highlight-color: var(--docsearch-primary-color);
@@ -506,127 +428,10 @@ body.dark .DocSearch-Button:hover {
   border: 1px solid var(--vt-c-brand);
 }
 
-.DocSearch-Button-Container {
-  align-items: center;
-  display: flex;
-}
-
-.DocSearch-Button {
-  display: flex;
-  justify-content: center;
-  align-items: center;
-  margin: 0;
-  width: 48px;
-  height: 55px;
-  background: transparent;
-  border: none;
-}
-
-.DocSearch-Button:hover {
-  background: transparent;
-}
-.DocSearch-Button:focus {
-  outline: 1px dotted;
-  outline: 5px auto -webkit-focus-ring-color;
-}
-.DocSearch-Button:focus:not(:focus-visible) {
-  outline: none !important;
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button {
-    justify-content: flex-start;
-    width: 100%;
-  }
-}
-
 .DocSearch-MagnifierLabel {
   color: var(--vp-c-brand-dark);
 }
 
-.DocSearch-Button .DocSearch-Search-Icon {
-  transition: color 0.5s;
-  fill: currentColor;
-  width: 18px;
-  height: 18px;
-  position: relative;
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button .DocSearch-Search-Icon {
-    top: 1px;
-    margin-right: 10px;
-    width: 15px;
-    height: 15px;
-  }
-}
-
-.DocSearch-Button:hover .DocSearch-Search-Icon {
-  color: var(--vt-c-text-1);
-}
-
-.DocSearch-Button-Placeholder {
-  transition: color 0.5s;
-  font-size: 13px;
-  font-weight: 500;
-  color: #66666699;
-  display: none;
-  padding: 0 10px 0 0;
-}
-
-@media (min-width: 960px) {
-  .DocSearch-Button-Placeholder {
-    display: inline-block;
-  }
-}
-
-.DocSearch-Button:hover .DocSearch-Button-Placeholder {
-  color: var(--vt-c-text-1);
-}
-
-.DocSearch-Button .DocSearch-Button-Key {
-  margin-top: 2px;
-  border: 1px solid var(--vt-c-divider);
-  border-right: none;
-  border-radius: 4px 0 0 4px;
-  display: none;
-  padding-left: 6px;
-  height: 22px;
-  line-height: 22px;
-  transition: color 0.5s, border-color 0.5s;
-  min-width: 0;
-}
-
-.DocSearch-Button .DocSearch-Button-Key + .DocSearch-Button-Key {
-  border-right: 1px solid var(--vt-c-divider);
-  border-left: none;
-  border-radius: 0 4px 4px 0;
-  padding-left: 2px;
-  padding-right: 6px;
-}
-
-.DocSearch-Button:hover .DocSearch-Button-Key {
-  /* border-color: var(--vt-c-brand-light); */
-  color: var(--vt-c-brand-light);
-}
-
-@media (min-width: 768px) {
-  .DocSearch-Button .DocSearch-Button-Key {
-    display: inline-block;
-  }
-}
-
-.DocSearch-Button-Key {
-  font-size: 12px;
-  font-weight: 500;
-  height: 20px;
-  margin: 0;
-  width: auto;
-  color: var(--vt-c-text-3);
-  transition: color 0.5s;
-  display: inline-block;
-  padding: 0 1px;
-}
 
 .VPPluginSearch-search-group{
   color: var(--vp-c-brand-1)
